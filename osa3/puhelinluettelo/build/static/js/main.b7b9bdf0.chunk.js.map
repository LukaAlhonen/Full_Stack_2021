{"version":3,"sources":["services/persons.js","components/Person.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","put","Person","person","removePerson","name","number","onClick","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","hanldeNumberChange","type","Filter","newSearch","handleSearch","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","setMessage","setClassName","useEffect","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","find","p","undefined","window","confirm","personObject","returnedPerson","map","length","concat","setTimeout","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7b9bdf0.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst personService = {\n  getAll,\n  create,\n  remove,\n  update\n}\n\nexport default personService\n","import React from 'react'\n\nconst Person = ({ person, removePerson}) => {\n  return(\n    <div>\n      {person.name} {person.number} <button onClick={removePerson}>delete</button>\n    </div>\n  )\n}\n\nexport default Person\n","import React from 'react'\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.addPerson}>\n    <div>name: <input value={props.newName} onChange={props.handleNameChange}/></div>\n    <div>number: <input value={props.newNumber} onChange={props.hanldeNumberChange}/></div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nexport default PersonForm\n","import React from 'react'\n\nconst Filter = ({ newSearch, handleSearch }) => (\n  <div>\n    filter: <input value={newSearch} onChange={handleSearch}/>\n  </div>\n)\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n  if(message === null) {\n    return null\n  }\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons.js'\nimport Person from './components/Person.js'\nimport PersonForm from './components/PersonForm.js'\nimport Filter from './components/Filter.js'\nimport Notification from './components/Notification.js'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setSearch ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ className, setClassName ] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.find(p => p.name === newName)\n    if(person !== undefined) {\n      if(window.confirm(`${newName} has already been added to the phonebook, replace the old number with a new one?`)){\n        const id = person.id\n        const personObject = {\n          name: newName,\n          number: newNumber,\n          id: id\n        }\n        personService\n          .update(id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : personObject))\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n        id: persons[persons.length-1].id+1\n      }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setClassName('notification')\n          setMessage(`${returnedPerson.name} added`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const removePerson = person => {\n    const id = person.id\n    if(window.confirm(`delete ${person.name}`)){\n      personService\n        .remove(id)\n        .then(returnedPerson => {\n          setPersons(persons.filter(p => p.id !== id))\n        })\n        .catch(error => {\n          setPersons(persons.filter(p => p.id !== id))\n          setClassName('error')\n          setMessage(`${person.name} has already been removed`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleSearch = (event) => setSearch(event.target.value)\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={message}\n        className={className}\n      />\n      <Filter\n        handleSearch={handleSearch}\n        newSearch={newSearch}\n      />\n      <h2>Add new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        hanldeNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <div>\n        {personsToShow.map(person =>\n          <Person\n            key={person.name}\n            person={person}\n            removePerson={() => removePerson(person)}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}